define("tiny_fontcase/commands",["exports","editor_tiny/utils","core/str","./common"],(function(_exports,_utils,_str,_common){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;
/**
   * Commands helper for the Moodle tiny_fontcase plugin.
   *
   * @module      tiny_fontcase/commands
   * @copyright   2024 Your Name <you@example.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const changeCase=(editor,toCase)=>{let selectedText=editor.selection.getContent();switch(toCase){case"uppercase":selectedText=selectedText.toUpperCase(),editor.selection.setContent(selectedText);break;case"lowercase":selectedText=selectedText.toLowerCase(),editor.selection.setContent(selectedText)}};_exports.getSetup=async()=>{const[uppercaseButtonNameTitle,changecaseMenuItemNameTitle,uppercaseTitle,lowercaseTitle,buttonImage]=await Promise.all([(0,_str.get_string)("button_uppercase",_common.component),(0,_str.get_string)("menuitem_changecase",_common.component),(0,_str.get_string)("uppercase",_common.component),(0,_str.get_string)("lowercase",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addButton(_common.uppercaseButtonName,{icon:_common.icon,tooltip:uppercaseButtonNameTitle,onAction:()=>changeCase(editor,"uppercase")}),editor.ui.registry.addNestedMenuItem(_common.changecaseMenuItemName,{icon:_common.icon,text:changecaseMenuItemNameTitle,getSubmenuItems:()=>[{type:"menuitem",text:lowercaseTitle,onAction:()=>changeCase(editor,"lowercase")},{type:"menuitem",text:uppercaseTitle,onAction:()=>changeCase(editor,"uppercase")}]})}}}));

//# sourceMappingURL=commands.min.js.map